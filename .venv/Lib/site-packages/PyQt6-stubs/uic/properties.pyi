from typing import Any

from .enum_map import EnumMap as EnumMap
from .exceptions import NoSuchClassError as NoSuchClassError
from .exceptions import UnsupportedPropertyError as UnsupportedPropertyError
from .icon_cache import IconCache as IconCache

logger: Any
DEBUG: Any
QtCore: Any
QtGui: Any
QtWidgets: Any

def int_list(prop): ...
def float_list(prop): ...

bool_: Any

def qfont_style_strategy(v): ...
def needsWidget(func): ...
def ascii_upper(s): ...

class Properties:
    factory: Any
    def __init__(self, factory, qtcore_module, qtgui_module, qtwidgets_module) -> None: ...
    def set_base_dir(self, base_dir) -> None: ...
    buddies: Any
    delayed_props: Any
    icon_cache: Any
    def reset(self) -> None: ...
    def convert(self, prop, widget: Any | None = ...): ...
    def getProperty(self, elem, name, default: Any | None = ...): ...
    def getAttribute(self, elem, name, default: Any | None = ...): ...
    def setProperties(self, widget, elem) -> None: ...
    currentIndex: Any
    currentRow: Any
    showDropIndicator: Any
    intValue: Any
    value: Any
    objectName: Any
    margin: Any
    leftMargin: Any
    topMargin: Any
    rightMargin: Any
    bottomMargin: Any
    spacing: Any
    horizontalSpacing: Any
    verticalSpacing: Any
    def tabSpacing(self, widget, prop) -> None: ...
    def buddy(self, widget, prop) -> None: ...
    def geometry(self, widget, prop) -> None: ...
    def orientation(self, widget, prop) -> None: ...
    def isWrapping(self, widget, prop) -> None: ...
    def pyuicMargins(self, widget, prop) -> None: ...
    def pyuicSpacing(self, widget, prop) -> None: ...
